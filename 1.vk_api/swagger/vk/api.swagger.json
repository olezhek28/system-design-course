{
  "swagger": "2.0",
  "info": {
    "title": "VK",
    "version": "1.0.0",
    "contact": {
      "name": "Oleg Kozyrev",
      "email": "okozyrev@ozon.ru"
    }
  },
  "tags": [
    {
      "name": "UserV1"
    },
    {
      "name": "FriendV1"
    },
    {
      "name": "PostV1"
    },
    {
      "name": "FeedV1"
    },
    {
      "name": "DialogV1"
    },
    {
      "name": "MailV1"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/dialog/v1/dialog-list": {
      "get": {
        "summary": "Возвращает список диалогов пользователя",
        "operationId": "DialogV1_GetDialogList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetDialogListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "Идентификатор пользователя, для которого запрашиваем список диалогов",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "description": "Количество диалогов, которое необходимо вернуть",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "Смещение от начала списка диалогов",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "DialogV1"
        ]
      }
    },
    "/dialog/v1/message-list": {
      "get": {
        "summary": "Возвращает сообщения в диалоге пользователя с другим пользователем",
        "operationId": "DialogV1_GetMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "Идентификатор пользователя, для которого запрашиваем список сообщений",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "dialogId",
            "description": "Идентификатор диалога, сообщения которого запрашиваем",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "description": "Количество сообщений, которое необходимо вернуть",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "Смещение от начала списка сообщений",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "DialogV1"
        ]
      }
    },
    "/feed/v1/my": {
      "post": {
        "summary": "Возвращает ленту публикаций пользователя по id",
        "operationId": "FeedV1_GetMyFeed",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetMyFeedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetMyFeedRequest"
            }
          }
        ],
        "tags": [
          "FeedV1"
        ]
      }
    },
    "/feed/v1/other": {
      "post": {
        "summary": "Возвращает ленту публикаций друзей пользователя по id",
        "operationId": "FeedV1_GetOtherFeed",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetOtherFeedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetOtherFeedRequest"
            }
          }
        ],
        "tags": [
          "FeedV1"
        ]
      }
    },
    "/friend/v1": {
      "delete": {
        "summary": "Удаляет друга у пользователя по id",
        "operationId": "FriendV1_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "Идентификатор пользователя, у которого удаляем друга",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "friendId",
            "description": "Идентификатор пользователя, которого удаляем из друзей",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "FriendV1"
        ]
      },
      "put": {
        "summary": "Добавляет пользователю нового друга по id",
        "operationId": "FriendV1_Add",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddRequest"
            }
          }
        ],
        "tags": [
          "FriendV1"
        ]
      }
    },
    "/friend/v1/list": {
      "get": {
        "summary": "Возвращает список параметров друзей пользователя",
        "operationId": "FriendV1_GetList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "Идентификатор пользователя, у которого запрашиваем список друзей",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "FriendV1"
        ]
      }
    },
    "/mail/v1/send": {
      "post": {
        "summary": "Отправляет сообщение от одного пользователя другому",
        "operationId": "MailV1_Send",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "Идентификатор пользователя, который отправляет сообщение",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "friendId",
            "description": "Идентификатор пользователя, которому отправляется сообщение",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "text",
            "description": "Текст сообщения",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "contentLink",
            "description": "Ссылка на контент сообщения (её может не быть)",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MailV1"
        ]
      }
    },
    "/post/v1": {
      "post": {
        "summary": "Создает новую публикацию на стене пользователя",
        "operationId": "PostV1_Publish",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublishRequest"
            }
          }
        ],
        "tags": [
          "PostV1"
        ]
      }
    },
    "/post/v1/upload-content": {
      "post": {
        "summary": "Загружает контент публикации",
        "operationId": "PostV1_UploadContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UploadContentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadContentRequest"
            }
          }
        ],
        "tags": [
          "PostV1"
        ]
      }
    },
    "/user/v1": {
      "get": {
        "summary": "Возвращает параметры пользователя по id",
        "operationId": "UserV1_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "Идентификатор пользователя, параметры которого запрашиваем",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "UserV1"
        ]
      }
    }
  },
  "definitions": {
    "AddRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "int64",
          "title": "Идентификатор пользователя, которому добавляем друга"
        },
        "friendId": {
          "type": "string",
          "format": "int64",
          "title": "Идентификатор пользователя, которого добавляем в друзья"
        }
      }
    },
    "Dialog": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Идентификатор диалога"
        },
        "userId": {
          "type": "string",
          "format": "int64",
          "title": "Идентификатор пользователя, который начал диалог"
        },
        "friendId": {
          "type": "string",
          "format": "int64",
          "title": "Идентификатор пользователя, с которым ведется диалог"
        },
        "lastMessageTimestamp": {
          "type": "string",
          "format": "date-time",
          "title": "Дата и время последнего сообщения в диалоге"
        }
      }
    },
    "GetDialogListResponse": {
      "type": "object",
      "properties": {
        "dialogs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Dialog"
          },
          "title": "Список диалогов пользователя"
        }
      }
    },
    "GetListResponse": {
      "type": "object",
      "properties": {
        "friends": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/User"
          },
          "title": "Список друзей пользователя c их параметрами"
        }
      }
    },
    "GetMessageResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Message"
          },
          "title": "Список сообщений в диалоге"
        }
      }
    },
    "GetMyFeedRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "int64",
          "title": "Идентификатор пользователя, ленту которого запрашиваем"
        },
        "limit": {
          "type": "string",
          "format": "int64",
          "title": "Количество публикаций в ленте, которое необходимо вернуть"
        },
        "offset": {
          "type": "string",
          "format": "int64",
          "title": "Смещение от начала ленты"
        }
      }
    },
    "GetMyFeedResponse": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Post"
          },
          "title": "Список публикаций пользователя в ленте"
        }
      }
    },
    "GetOtherFeedRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "int64",
          "title": "Идентификатор пользователя, для которого хотим вернуть список публикаций его друзей"
        },
        "limit": {
          "type": "string",
          "format": "int64",
          "title": "Количество публикаций в ленте, которое необходимо вернуть"
        },
        "offset": {
          "type": "string",
          "format": "int64",
          "title": "Смещение от начала ленты"
        }
      }
    },
    "GetOtherFeedResponse": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Post"
          },
          "title": "Список публикаций друзей пользователя в ленте"
        }
      }
    },
    "GetResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/User",
          "title": "Параметры пользователя"
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Идентификатор сообщения"
        },
        "dialogId": {
          "type": "string",
          "format": "int64",
          "title": "Идентификатор диалога, в котором находится сообщение"
        },
        "userId": {
          "type": "string",
          "format": "int64",
          "title": "Идентификатор пользователя, который отправил сообщение"
        },
        "text": {
          "type": "string",
          "title": "Текст сообщения"
        },
        "contentLink": {
          "type": "string",
          "title": "Ссылка на контент сообщения (её может не быть)"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "Дата отправки сообщения"
        }
      }
    },
    "Post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Идентификатор публикации"
        },
        "userId": {
          "type": "string",
          "format": "int64",
          "title": "Идентификатор пользователя, на стене которого создана публикация"
        },
        "text": {
          "type": "string",
          "title": "Текст публикации"
        },
        "contentLink": {
          "type": "string",
          "title": "Ссылка на контент публикации (её может не быть)"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "Дата создания публикации"
        }
      }
    },
    "PublishRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "int64",
          "title": "Идентификатор пользователя, на стене которого создаем публикацию"
        },
        "text": {
          "type": "string",
          "title": "Текст публикации"
        },
        "contentLink": {
          "type": "string",
          "title": "Ссылка на контент публикации (её может не быть)"
        }
      }
    },
    "UploadContentRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "int64",
          "title": "Идентификатор пользователя, на стене которого создаем публикацию"
        },
        "content": {
          "type": "string",
          "format": "byte",
          "title": "Контент публикации"
        }
      }
    },
    "UploadContentResponse": {
      "type": "object",
      "properties": {
        "contentLink": {
          "type": "string",
          "title": "Ссылка на контент публикации"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Идентификатор пользователя"
        },
        "name": {
          "type": "string",
          "title": "Имя пользователя"
        },
        "surname": {
          "type": "string",
          "title": "Фамилия пользователя"
        },
        "avatarLink": {
          "type": "string",
          "title": "Ссылка на аватар пользователя"
        },
        "email": {
          "type": "string",
          "title": "Электронная почта пользователя"
        },
        "phone": {
          "type": "string",
          "title": "Номер телефона пользователя"
        },
        "about": {
          "type": "string",
          "title": "О себе"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
